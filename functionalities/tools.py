import yaml
import random


# Random function to ensure that the random values generated by function are truly random and not predictable:
def randomMe(my_lists, seed=None):
    # Seed the random number generator
    random.seed(seed, version=2)
    # Shuffle the list to prevent any bias
    random.shuffle(my_lists)
    # Randomly select and item from the list
    return random.choice(my_lists)


# Random time interval between each requests made to server.
# You can decrease the time interval for faster scraping, however I discourage you to do so as it may hurt the server and Amazon may ban your IP address.
# Scrape responsibly:
def randomTime(val):
    ranges = [i for i in range(3, val+1)]
    return randomMe(ranges)


# Hundreds of thousands of user agents for server:
def userAgents():
    with open('functionalities//user-agents.txt') as f:
        agents = f.read().split("\n")
        return randomMe(agents)


# function for yaml selectors:
def yamlMe(selectors):
    with open(f"scrapers//{selectors}.yaml") as file:
        sel = yaml.load(file, Loader=yaml.SafeLoader) 
        return sel


# Verify amazon link:



class TryExcept:
    def text(self, element):
        try:
            return element.inner_text().strip()
        except AttributeError:
            return "N/A"

    def attributes(self, element, attr):
        try:
            return element.get_attribute(attr)
        except AttributeError:
            return "N/A"


